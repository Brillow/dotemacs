#!/bin/bash

# Taken from: mjwall.com/blog/2013/10/04/how-i-use-emacs/
# Git-Repo: https://github.com/mjwall/dotfiles

# This script starts the emacs daemon if it is not running, opens whatever file you pass in and changes the focus to emacs.
# Without any arguments, it just opens the current buffer or *scratch* if nothing else is open. The following example will open ~/.bashrc

# ec ~/.bashrc

# You can also pass it multiple files, it will open them all. Unbury-buffer will cycle through thos files in order

# The compliment to this script it et, which opens emacs in the terminal attached to a daemon,

# If you want to execute elisp, pass in -e whatever.
# You may also want to stop the output from returning to the terminal, like ec -e "(message \"Hello\")" > /dev/null

# emacsclient options for reference:
# -a "" start emacs daemon and reattaches
# -c creates a new frame
# -n returns control back to the terminal
# -e eval given script

change_focus() {
    emacsclient -n -e "(select-frame-set-input-focus (selected-frame))" > /dev/null
}

if [[ "$#" -ne "0" ]]; then
    # -c $@ with no args just opens the scratch buffer    
    emacsclient -n -c "$@" && change_focus
else
    emacsclient -n -c -e "(progn (org-agenda-list) (delete-other-windows))" > /dev/null && change_focus
fi
